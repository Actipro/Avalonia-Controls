<UserControl 
	x:Name="sampleRootControl"
	x:Class="ActiproSoftware.ProductSamples.FundamentalsSamples.Controls.MessageBoxIntro.MainControl"
	xmlns="https://github.com/avaloniaui"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:actipro="http://schemas.actiprosoftware.com/avaloniaui"
	xmlns:controlsPrims="using:Avalonia.Controls.Primitives"
	xmlns:local="using:ActiproSoftware.ProductSamples.FundamentalsSamples.Controls.MessageBoxIntro"
	xmlns:layout="using:Avalonia.Layout"
	xmlns:sampleBrowser="using:ActiproSoftware.SampleBrowser"
	>
	<UserControl.Styles>
		<Style Selector="Button.show-dialog">
			<Setter Property="Content" Value="Show MessageBox" />
			<Setter Property="HorizontalAlignment" Value="Center" />
		</Style>
	</UserControl.Styles>

	<sampleBrowser:ControlExampleItemsControl
		Header="MessageBox provides the ability to display standard prompts using an API that is consistent with WPF's native MessageBox.">

		<sampleBrowser:ControlExampleItemsControl.Documentation>
			<sampleBrowser:ControlExampleLinkItem Title="MessageBox" Url="https://www.actiprosoftware.com/docs/controls/avalonia/fundamentals/user-prompt/message-box" />
			<sampleBrowser:ControlExampleLinkItem Title="Builder pattern" Url="https://www.actiprosoftware.com/docs/controls/avalonia/fundamentals/user-prompt/builder-pattern" />
		</sampleBrowser:ControlExampleItemsControl.Documentation>

		<sampleBrowser:ControlExampleItemsControl.RelatedSamples>
			<sampleBrowser:ControlExampleLinkItem Title="User prompt" Url="/ProductSamples/FundamentalsSamples/Controls/UserPromptIntro/MainControl" />
		</sampleBrowser:ControlExampleItemsControl.RelatedSamples>


		<sampleBrowser:ControlExample
			Header="Basic usage"
			Footer="Click the 'Show MessageBox' button to see the generated message box."
			DataContext="{Binding #sampleRootControl.MessageBoxSampleViewModel}"
			>
			<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Spacing="10">

				<TextBlock Classes="theme-text-heading size-xs" Text="Non-interactive preview" HorizontalAlignment="Center" />
				<actipro:ShadowChrome>
					<Border CornerRadius="8" BorderThickness="1"
							Background="{actipro:ThemeResource Container1BackgroundBrush}"
							BorderBrush="{actipro:ThemeResource Container3BorderBrush}">
						
						<StackPanel actipro:BorderChildClipConverter.ClipToContainingBorder="True">
							<!-- Simulated dialog title bar-->
							<DockPanel MinHeight="32">
								<Button x:Name="PART_CloseButton" DockPanel.Dock="Right"
										ContentTemplate="{actipro:GlyphTemplate CloseWindow16}"
										Theme="{actipro:ControlTheme TitleBarButton}"
										IsVisible="{Binding HasCloseButton}"
										ToolTip.Tip="Close" />
								<TextBlock Text="{Binding Caption}" Padding="7,5" />
							</DockPanel>

							<!-- 
								The built-in UserPromptControl border and shadow are turned off
								so a dialog caption can be simulated above the control
							-->
							<actipro:UserPromptControl StandardButtons="{Binding ButtonsResolved, Mode=OneWay}"
													   StandardStatusImage="{Binding Image}"
													   DefaultResult="{Binding DefaultResult}"
													   Content="{Binding Text}"
													   Elevation="0"
													   BorderThickness="0"
													   />
						</StackPanel>
					</Border>
				</actipro:ShadowChrome>

			</StackPanel>
			
			<sampleBrowser:ControlExample.Options>
				<StackPanel Spacing="10">
					<TextBox Text="{Binding Caption}" Watermark="Caption" UseFloatingWatermark="True" />
					<TextBox Text="{Binding Text}" Watermark="Message" UseFloatingWatermark="True" />
					<StackPanel>
						<TextBlock Classes="theme-form-control-label" Text="Status image" />
						<ComboBox ItemsSource="{actipro:DelimitedArray Type=actipro:MessageBoxImage}" SelectedValue="{Binding Image}" />
					</StackPanel>
					<StackPanel>
						<TextBlock Classes="theme-form-control-label" Text="Buttons" />
						<ComboBox ItemsSource="{actipro:DelimitedArray 'OK, OKCancel, YesNo, YesNoCancel, RetryCancel, AbortRetryIgnore', Type=actipro:MessageBoxButtons}" SelectedValue="{Binding Buttons}" />
						<CheckBox IsChecked="{Binding AddHelpButton}" Margin="0,4,0,0" Content="Add 'Help' button" />
					</StackPanel>
					<StackPanel>
						<TextBlock Classes="theme-form-control-label" Text="Default result" />
						<ComboBox ItemsSource="{actipro:DelimitedArray Type=actipro:MessageBoxResult}" SelectedValue="{Binding DefaultResult}" />
					</StackPanel>
					<StackPanel>
						<TextBlock Classes="theme-form-control-label" Text="Display mode" />
						<ComboBox ItemsSource="{actipro:DelimitedArray Type=actipro:UserPromptDisplayMode}" SelectedValue="{Binding DisplayMode}" />
						<TextBlock Classes="theme-form-control-message warning" Text="Dialog not availailable on this platform" IsVisible="{Binding !IsDialogAllowed}" />
					</StackPanel>
					<Button Classes="show-dialog theme-solid accent" Margin="0,10" Command="{Binding ShowMessageBox}" />
					<TextBox IsEnabled="False" Text="{Binding Result}" Watermark="Result" UseFloatingWatermark="True" />
				</StackPanel>
			</sampleBrowser:ControlExample.Options>
			<sampleBrowser:ControlExample.CodeExamples>
				<sampleBrowser:CodeExample Language="C#" UnformattedText="{Binding SampleCode}" />
			</sampleBrowser:ControlExample.CodeExamples>
		</sampleBrowser:ControlExample>


		<sampleBrowser:ControlExample
			Header="Advanced customization"
			Footer="Click the 'Show MessageBox' button to see the generated message box."
			>

			<Border Background="{actipro:ThemeResource Container1BackgroundBrush}" BorderBrush="{actipro:ThemeResource Container1BorderBrush}"
					BorderThickness="1" Padding="40,20" CornerRadius="8">
				<StackPanel Spacing="20">
					<TextBlock Classes="theme-text-heading size-xs" Text="MessageBox.ShowAdvanced" HorizontalAlignment="Center" />
					<TextBlock TextWrapping="Wrap">
						MessageBox pre-configures a UserPromptBuilder based on the arguments provided, but the UserPromptBuilder can be
						further configured with advanced options before the prompt is displayed.
					</TextBlock>
					<TextBlock TextWrapping="Wrap">
						View the sample code for more detail.
					</TextBlock>
				</StackPanel>
			</Border>

			<sampleBrowser:ControlExample.Options>
				<StackPanel Spacing="10">
					<Button Classes="show-dialog theme-solid accent" Click="OnSampleShowDialogCustomizationButtonClick" />
				</StackPanel>
			</sampleBrowser:ControlExample.Options>
			<sampleBrowser:ControlExample.CodeExamples>
				<sampleBrowser:CodeExample Language="C#" xml:space="preserve">
					<![CDATA[
bool stopShowing = false;
var result = await MessageBox.Show(
	"This MessageBox has been customized to include a CheckBox.",
	"Customize Sample",
	MessageBoxButtons.OK,
	MessageBoxImage.Information,
	configure: (builder) => builder
		.WithCheckBox("_Stop showing messages like this.")
		.WithIsChecked(
			getter: () => stopShowing,
			setter: (value) => stopShowing = value
		)
	);

if (stopShowing) {
	// Implement logic to suppress the message from being shown in the future
}
					]]>
				</sampleBrowser:CodeExample>
			</sampleBrowser:ControlExample.CodeExamples>
		</sampleBrowser:ControlExample>


	</sampleBrowser:ControlExampleItemsControl>
</UserControl>
